<?xml version="1.0"?>
<robot name="holonomic_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="PI" value="3.1415926535897931" />
  <xacro:property name="wheel_radius" value="0.1" />
  <xacro:property name="wheel_width" value="0.05" />
  <xacro:property name="dummy_inertia" value="1e-09"/>

  <link name="base_link" >
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </link>

  <link name="chassis">
    <origin xyz="0 0 .15" rpy="0 0 0"/>

    <collision name='chassis_base_collision'>
      <geometry>
        <!-- <cylinder length="0.1" radius="0.25"/> -->
        <box size="0.5 0.25 0.1"/>
      </geometry>
    </collision>

    <visual name='chassis_base_visual'>
      <geometry>
        <!-- <cylinder length="0.1" radius="0.25"/> -->
        <box size="0.5 0.24 0.1"/>
      </geometry>
      <material name="white">  
         <color rgba="1 1 1 1"/>  
      </material> 
    </visual>

    <collision name='caster_collision_front'>
      <origin xyz="-0.15 0 -0.09" rpy="0 0 0"/>
      <geometry>
        <sphere radius=".06"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>0.0</slip1>
            <slip2>0.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name='caster_visual_front'>
      <origin xyz="-0.15 0 -0.09" rpy="0 0 0"/>
      <geometry>
        <sphere radius=".06"/>
      </geometry>
    </visual>

    <collision name='caster_collision_rear'>
      <origin xyz="0.15 0 -0.09" rpy="0 0 0"/>
      <geometry>
        <sphere radius=".06"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>0.0</slip1>
            <slip2>0.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name='caster_collision_rear'>
      <origin xyz="0.15 0 -0.09" rpy="0 0 0"/>
      <geometry>
        <sphere radius=".06"/>
      </geometry>
    </visual>

    <!-- <inertial> -->
      <mass value="5" />
    <!-- </inertial> -->
  </link>

  <joint name="chassis_joint" type="fixed">
    <origin xyz="0 0 .15" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="chassis" />
  </joint>

  <link name="left_wheel">
    <origin xyz="0 0.15 0.1" rpy="${PI/2} 0 0"/>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black" />
    </visual>
    <inertial>
      <mass value="1" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <origin xyz="0 0.15 0.1" rpy="-${PI/2} 0 0"/>
    <parent link="base_link"/>
    <child link="left_wheel" />
    <axis xyz="0 1 0" />
  </joint>

  <link name="right_wheel">
    <origin xyz="0 -0.15 0.1" rpy="${PI/2} 0 0"/>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black" />
    </visual>
    <inertial>
      <mass value="1" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
    </inertial>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <origin xyz="0 -0.15 0.1" rpy="-${PI/2} 0 0"/>
    <parent link="base_link"/>
    <child link="right_wheel" />
    <axis xyz="0 1 0" />
  </joint>

  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis" />
    <child link="imu_link" />
  </joint>

  <link name="gps_link">
    <origin xyz="0 0 0.05" />
    <visual>
      <geometry>
        <cylinder radius="0.026" length="0.016" />
      </geometry>
      <material name="black" />
    </visual>
  </link>
  <joint name="navsat_joint" type="fixed">
    <origin xyz="0 0 0.05" />
    <parent link="chassis" />
    <child link="gps_link" />
  </joint>


  <!-- <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo> -->

  <!-- <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo> -->

  <!-- <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <updateRate>40</updateRate>
      <robotNamespace>/</robotNamespace>
      <bodyName>gps_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>/gps/fix</topicName>
      <velocityTopicName>/gps/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo> -->

  <!-- <gazebo>
    <plugin name="robot_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.299</wheelSeparation>
      <wheelDiameter>${wheel_radius*2}</wheelDiameter>
      <wheelAcceleration>0.5</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo> -->

</robot>